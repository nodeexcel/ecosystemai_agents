"""update contact list

Revision ID: 3ea69336c167
Revises: 133090883dc7
Create Date: 2025-05-29 11:48:18.580505

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3ea69336c167'
down_revision: Union[str, None] = '133090883dc7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('listName', sa.String(), nullable=True),
    sa.Column('channel', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('team_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lists_id'), 'lists', ['id'], unique=False)
    op.create_table('contact_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contactid', sa.Integer(), nullable=True),
    sa.Column('lists_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contactid'], ['contacts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lists_id'], ['lists.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_lists_id'), 'contact_lists', ['id'], unique=False)
    op.add_column('contacts', sa.Column('status', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('contacts', 'status')
    op.drop_index(op.f('ix_contact_lists_id'), table_name='contact_lists')
    op.drop_table('contact_lists')
    op.drop_index(op.f('ix_lists_id'), table_name='lists')
    op.drop_table('lists')
    # ### end Alembic commands ###
