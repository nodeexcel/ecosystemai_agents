"""soft delete

Revision ID: 5efb269b39ba
Revises: ee236a1a3418
Create Date: 2025-05-19 12:44:17.721861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5efb269b39ba'
down_revision: Union[str, None] = 'ee236a1a3418'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('appointment_setter_user_id_fkey', 'appointment_setter', type_='foreignkey')
    op.create_foreign_key(None, 'appointment_setter', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('knowledge_base_user_id_fkey', 'knowledge_base', type_='foreignkey')
    op.create_foreign_key(None, 'knowledge_base', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('lead_analytics_lead_id_fkey', 'lead_analytics', type_='foreignkey')
    op.drop_constraint('lead_analytics_agent_id_fkey', 'lead_analytics', type_='foreignkey')
    op.create_foreign_key(None, 'lead_analytics', 'appointment_setter', ['agent_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'lead_analytics', 'appointment_agent_leads', ['lead_id'], ['id'], ondelete='SET NULL')
    op.add_column('users', sa.Column('isDeleted', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'isDeleted')
    op.drop_constraint(None, 'lead_analytics', type_='foreignkey')
    op.drop_constraint(None, 'lead_analytics', type_='foreignkey')
    op.create_foreign_key('lead_analytics_agent_id_fkey', 'lead_analytics', 'appointment_setter', ['agent_id'], ['id'])
    op.create_foreign_key('lead_analytics_lead_id_fkey', 'lead_analytics', 'appointment_agent_leads', ['lead_id'], ['id'])
    op.drop_constraint(None, 'knowledge_base', type_='foreignkey')
    op.create_foreign_key('knowledge_base_user_id_fkey', 'knowledge_base', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'appointment_setter', type_='foreignkey')
    op.create_foreign_key('appointment_setter_user_id_fkey', 'appointment_setter', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
