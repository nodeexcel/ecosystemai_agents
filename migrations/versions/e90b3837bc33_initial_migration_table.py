"""initial_migration_table

Revision ID: e90b3837bc33
Revises: 
Create Date: 2025-05-16 12:06:51.143116

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e90b3837bc33'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('expiresAt', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=True),
    sa.Column('lastName', sa.String(length=50), nullable=True),
    sa.Column('phoneNumber', sa.String(length=20), nullable=True),
    sa.Column('image', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=30), nullable=True),
    sa.Column('company', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('role', sa.String(length=20), default='Admin'),
    sa.Column('subscriptionType', sa.String(length=20), nullable=True),
    sa.Column('paymentId', sa.String(length=100), nullable=True),
    sa.Column('activeProfile', sa.Boolean(), default=False),
    sa.Column('isProfileComplete', sa.Boolean(), default=False),
    sa.Column('stripeCustomerId', sa.String(length=50), nullable=True),
    sa.Column('subscriptionStatus', sa.String(length=50), nullable=True),
    sa.Column('subscriptionId', sa.String(length=100), nullable=True),
    sa.Column('refreshToken', sa.String(length=255), nullable=True),
    sa.Column('otp', sa.String(length=6), nullable=True),
    sa.Column('subscriptionEndDate', sa.DateTime(), nullable=True),
    sa.Column('subscriptionStartDate', sa.DateTime(), nullable=True),
    sa.Column('subscriptionUpdatedAt', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('appointment_setter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_name', sa.String(), nullable=False),
    sa.Column('agent_personality', sa.String(), nullable=False),
    sa.Column('agent_language', sa.String(), nullable=True),
    sa.Column('business_description', sa.String(), nullable=False),
    sa.Column('your_business_offer', sa.String(), nullable=False),
    sa.Column('qualification_questions', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('sequence', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('objective_of_the_agent', sa.String(), nullable=False),
    sa.Column('calendar_choosed', sa.String(), nullable=True),
    sa.Column('webpage_link', sa.String(), nullable=True),
    sa.Column('webpage_type', sa.String(), nullable=True),
    sa.Column('reply_min_time', sa.Integer(), nullable=False),
    sa.Column('reply_max_time', sa.Integer(), nullable=False),
    sa.Column('is_followups_enabled', sa.Boolean(), nullable=True),
    sa.Column('follow_up_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('emoji_frequency', sa.Integer(), nullable=False),
    sa.Column('directness', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointment_setter_id'), 'appointment_setter', ['id'], unique=False)
    op.create_table('team',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('numberOfTeamMembers', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('paymentId', sa.String(length=100), nullable=False),
    sa.Column('amountPaid', sa.Float(), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('paymentMethod', sa.String(length=50), nullable=True),
    sa.Column('subscriptionType', sa.String(length=20), nullable=True),
    sa.Column('receiptUrl', sa.String(length=255), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('transactionDate', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invite_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('teamId', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('expiresAt', sa.DateTime(), nullable=False),
    sa.Column('accepted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['teamId'], ['team.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('teammembers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('isAdmin', sa.Boolean(), nullable=True),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('teamId', sa.String(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['teamId'], ['team.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teammembers')
    op.drop_table('invite_tokens')
    op.drop_table('transaction_history')
    op.drop_table('team')
    op.drop_index(op.f('ix_appointment_setter_id'), table_name='appointment_setter')
    op.drop_table('appointment_setter')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('password_reset_tokens')
    # ### end Alembic commands ###
